# -*- coding: utf-8 -*-
"""app_1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UQkuPx2Xb6nVPmonxBmut1gb0UbQyc39
"""

!pip install streamlit

import streamlit as st
import pandas as pd
import requests
from datetime import datetime

# — Page Config —
st.set_page_config(page_title="Live Stock Checker 📈", layout="centered")

st.title("📊 Live Stock Price Checker")
st.write("Enter a stock ticker (e.g., AAPL, MSFT) to get the latest price in real-time.")

# — User Input —
symbol = st.text_input("Ticker Symbol:", "AAPL").upper()

# — Fetch Data Function —
@st.cache(ttl=60)  # cache for 60 seconds to avoid hitting rate limits
def get_stock_price(sym):
    url = (
        f"https://www.alphavantage.co/query"
        f"?function=GLOBAL_QUOTE&symbol={sym}&apikey=X7UK3IP1BY6ZA91I"
    )
    res = requests.get(url, timeout=10)
    j = res.json()
    return j.get("Global Quote", {})

# — Button & Display —
if st.button("🔍 Get Live Price"):
    with st.spinner("Fetching..."):
        data = get_stock_price(symbol)
    if not data:
        st.error("❌ No data found. Check the ticker and try again.")
    else:
        price = float(data.get("05. price", 0))
        change = float(data.get("09. change", 0))
        pct = float(data.get("10. change percent", "0%").strip("%"))
        last = data.get("07. latest trading day", "")
        tm = data.get("08. previous close", "")
        st.success(f"**{symbol}** as of {last}: **${price:.2f}**")
        st.metric(label="Change", value=f"${change:.2f}", delta=f"{pct:.2f}%")
        chart_df = pd.DataFrame({
            "label": ["Price", "Prev Close"],
            "value": [price, float(tm)]
        }).set_index("label")
        st.bar_chart(chart_df)