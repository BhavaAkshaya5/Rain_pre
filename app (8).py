# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17fWn8oJNEzktSSQyDYfmxNupwhsG-esB
"""

pip install streamlit pyttsx3

import streamlit as st
import requests
from datetime import datetime
import pyttsx3

# Set page config
st.set_page_config(page_title="Rain Forecast ☔", layout="centered")

# Background image CSS
def set_background():
    st.markdown("""
        <style>
            body {
                background-image: url('https://images.unsplash.com/photo-1504384308090-c894fdcc538d');
                background-size: cover;
                background-repeat: no-repeat;
                background-attachment: fixed;
            }
            .main {
                background-color: rgba(255, 255, 255, 0.88);
                padding: 2rem;
                border-radius: 10px;
                box-shadow: 2px 4px 8px rgba(0,0,0,0.3);
            }
            h1, h2, h3 {
                color: #003366;
                text-align: center;
            }
        </style>
    """, unsafe_allow_html=True)

# Dark mode CSS
def set_dark_mode():
    st.markdown("""
        <style>
            body {
                background-color: #1e1e1e;
                color: white;
            }
            .main {
                background-color: rgba(30, 30, 30, 0.95);
                color: white;
                padding: 2rem;
                border-radius: 10px;
            }
            h1, h2, h3 {
                color: #ffcc00;
            }
        </style>
    """, unsafe_allow_html=True)

# Theme toggle
theme = st.radio("Choose Theme 🌈", ["☀️ Light", "🌙 Dark"])
set_background() if theme == "☀️ Light" else set_dark_mode()

# Main UI container
with st.container():
    st.markdown("<div class='main'>", unsafe_allow_html=True)
    st.markdown("## ⛅ **Live Weather & Rain Forecast** ☔")

    API_KEY = "0a4819b28a82fa77e5437c6c156837d4"
    city = st.text_input("📍 Enter your city:", "Chennai")

    if st.button("🔍 Check Weather Now"):
        url = f"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={API_KEY}&units=metric"
        response = requests.get(url)

        if response.status_code == 200:
            data = response.json()
            temp = data["main"]["temp"]
            humidity = data["main"]["humidity"]
            wind = data["wind"]["speed"]
            weather = data["weather"][0]["description"]
            dt = datetime.fromtimestamp(data["dt"]).strftime("%A, %d %b %Y %I:%M %p")

            rain_pred = "🌧️ Rain Expected" if "rain" in weather.lower() else "🌤️ No Rain"

            # Display results
            st.markdown(f"### 📆 **{dt}**")
            st.markdown(f"### 🌡️ Temperature: **{temp} °C**")
            st.markdown(f"### 💧 Humidity: **{humidity}%**")
            st.markdown(f"### 🌬️ Wind: **{wind} m/s**")
            st.markdown(f"### 🌀 Condition: **{weather.title()}**")
            st.markdown(f"## ⏱️ Prediction Now: **{rain_pred}**")


if st.button("🔊 Speak Forecast"):
    tts_text = f"In {city}, it is {temp} degrees Celsius with {weather}. {rain_pred.replace('🌧️','Rain').replace('🌤️','No rain')}."
    st.components.v1.html(f"""
        <script>
            var msg = new SpeechSynthesisUtterance("{tts_text}");
            window.speechSynthesis.speak(msg);
        </script>
    """, height=0)

    st.markdown("</div>", unsafe_allow_html=True)

